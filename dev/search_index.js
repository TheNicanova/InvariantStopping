var documenterSearchIndex = {"docs":
[{"location":"dev/#Plumbing","page":"Dev","title":"Plumbing","text":"","category":"section"},{"location":"dev/#Lowered-Schedule","page":"Dev","title":"Lowered Schedule","text":"","category":"section"},{"location":"dev/","page":"Dev","title":"Dev","text":"State encodes the information (e.g. coordinates) needed to specify the full configuration of the system.","category":"page"},{"location":"dev/#Stopping-Opportunity","page":"Dev","title":"Stopping Opportunity","text":"","category":"section"},{"location":"dev/","page":"Dev","title":"Dev","text":"A stopping opportunity is a unit of decision. It is specified by a predicate and a list of timestamps. The predicate is simply a function that takes a collection of states and returns true or false. The states are sampled at each timestamp provided in the timestamps list. ","category":"page"},{"location":"dev/","page":"Dev","title":"Dev","text":"(Image: StoppingOpportunity)","category":"page"},{"location":"dev/#Stopping-time.","page":"Dev","title":"Stopping time.","text":"","category":"section"},{"location":"dev/","page":"Dev","title":"Dev","text":"A stopping time is simply a collection of stopping opportunities. The stopping opportunities are tested in chronological order.","category":"page"},{"location":"dev/","page":"Dev","title":"Dev","text":"(Image: StoppingTime)","category":"page"},{"location":"dev/#Schedule","page":"Dev","title":"Schedule","text":"","category":"section"},{"location":"dev/","page":"Dev","title":"Dev","text":"One can define a simple schedule such as","category":"page"},{"location":"dev/","page":"Dev","title":"Dev","text":"julia> schedule = Tree([0.0,1.0,2.0],3)","category":"page"},{"location":"dev/","page":"Dev","title":"Dev","text":"which amounts to sampling a ternary tree","category":"page"},{"location":"dev/","page":"Dev","title":"Dev","text":"The above sample has the following schedule","category":"page"},{"location":"dev/","page":"Dev","title":"Dev","text":"(Image: Deterministic Schedule)","category":"page"},{"location":"dev/","page":"Dev","title":"Dev","text":"But this is just a specific instance of a more general schedule","category":"page"},{"location":"dev/","page":"Dev","title":"Dev","text":"(Image: Schedule)","category":"page"},{"location":"dev/","page":"Dev","title":"Dev","text":"A generic schedule could be for instance","category":"page"},{"location":"dev/","page":"Dev","title":"Dev","text":"(Image: Generic Schedule)","category":"page"},{"location":"dev/","page":"Dev","title":"Dev","text":"(Image: Measuring Time)","category":"page"},{"location":"dev/#Lowered-Schedule-2","page":"Dev","title":"Lowered Schedule","text":"","category":"section"},{"location":"dev/","page":"Dev","title":"Dev","text":"We record the index corresponding to the first stopping opportunity that evalutes to true.","category":"page"},{"location":"dev/#Sample","page":"Dev","title":"Sample","text":"","category":"section"},{"location":"dev/#Lowered-Sample","page":"Dev","title":"Lowered Sample","text":"","category":"section"},{"location":"method/","page":"Methods","title":"Methods","text":"get_history(::Sample)","category":"page"},{"location":"method/#InvariantStopping.Utils.get_history-Tuple{Sample}","page":"Methods","title":"InvariantStopping.Utils.get_history","text":"get_history\n\n\n\n\n\n","category":"method"},{"location":"method/","page":"Methods","title":"Methods","text":"get_leaf(::Sample)","category":"page"},{"location":"method/#InvariantStopping.Utils.get_leaf-Tuple{Sample}","page":"Methods","title":"InvariantStopping.Utils.get_leaf","text":"get_leaf\n\n\n\n\n\n","category":"method"},{"location":"method/","page":"Methods","title":"Methods","text":"plot(::Sample)","category":"page"},{"location":"method/#InvariantStopping.Plot.plot-Tuple{Sample}","page":"Methods","title":"InvariantStopping.Plot.plot","text":"plot(::Sample)\n\n1D : Plot a sample with the x-axis representing time and the y-axis representing the first coordinate.\n\nExamples:\n\n\nstate = State(0.0,(1.0,))\nbinary_tree = Schedule(LinRange(0,10,11),2)\nunderlying_model = GeometricBrownianMotion(0.01,0.05,0.0)\n\nsample = Sample(state, tree, underlying_model)\n\nplot(sample)\n\n(Image: Sample plot)\n\n\nstate = State(0.0,(1.0,))\nstar = Star(LinRange(0,10,11),12)\nunderlying_model = GeometricBrownianMotion(0.01,0.05,0.0)\n\nsample = Sample(state, star, underlying_model)\n\nplot(sample)\n\n(Image: Sample plot)\n\n\n\n\n\n","category":"method"},{"location":"overview/#InvariantStopping","page":"Overview","title":"InvariantStopping","text":"","category":"section"},{"location":"overview/","page":"Overview","title":"Overview","text":"Explore how optimal stopping problems transform under random-time coordinate transforms. *","category":"page"},{"location":"type/#Underlying-Model","page":"Types","title":"Underlying Model","text":"","category":"section"},{"location":"type/#State","page":"Types","title":"State","text":"","category":"section"},{"location":"type/","page":"Types","title":"Types","text":"State","category":"page"},{"location":"type/#InvariantStopping.SimulationState.State","page":"Types","title":"InvariantStopping.SimulationState.State","text":"State\n\nFields\n\ntime: Represents concrete time.\n\njulia     coord: An N dimensional coordinate.\n\nA state is an object that contains the time and coordinates of a given realization.\n\n\n\n\n\n","category":"type"},{"location":"type/#StoppingTime","page":"Types","title":"StoppingTime","text":"","category":"section"},{"location":"type/","page":"Types","title":"Types","text":"StoppingTime","category":"page"},{"location":"type/#InvariantStopping.Policy.StoppingTime","page":"Types","title":"InvariantStopping.Policy.StoppingTime","text":"StoppingTime\n\n\n\n\n\n","category":"type"},{"location":"type/","page":"Types","title":"Types","text":"StoppingOpportunity","category":"page"},{"location":"type/#InvariantStopping.Policy.StoppingOpportunity","page":"Types","title":"InvariantStopping.Policy.StoppingOpportunity","text":"StoppingOpportunity\n\n\n\n\n\n","category":"type"},{"location":"type/","page":"Types","title":"Types","text":"HittingTime","category":"page"},{"location":"type/#InvariantStopping.Policy.HittingTime","page":"Types","title":"InvariantStopping.Policy.HittingTime","text":"HittingTime\n\n\n\n\n\n","category":"function"},{"location":"type/","page":"Types","title":"Types","text":"DeterministicTime","category":"page"},{"location":"type/#InvariantStopping.Policy.DeterministicTime","page":"Types","title":"InvariantStopping.Policy.DeterministicTime","text":"DeterministicTime\n\n\n\n\n\n","category":"function"},{"location":"type/#Schedule","page":"Types","title":"Schedule","text":"","category":"section"},{"location":"type/","page":"Types","title":"Types","text":"Schedule","category":"page"},{"location":"type/#InvariantStopping.Scheduler.Schedule","page":"Types","title":"InvariantStopping.Scheduler.Schedule","text":"Schedule\n\nMeant to be as easy as possible for the user to define.\n\n\n\n\n\n","category":"type"},{"location":"type/#LoweredSchedule","page":"Types","title":"LoweredSchedule","text":"","category":"section"},{"location":"type/","page":"Types","title":"Types","text":"LoweredSchedule","category":"page"},{"location":"type/#InvariantStopping.Scheduler.LoweredSchedule","page":"Types","title":"InvariantStopping.Scheduler.LoweredSchedule","text":"LoweredSchedule\n\n\n\n\n\n","category":"type"},{"location":"type/#UnderlyingModel","page":"Types","title":"UnderlyingModel","text":"","category":"section"},{"location":"type/","page":"Types","title":"Types","text":"BrownianMotion","category":"page"},{"location":"type/#InvariantStopping.Transition.BrownianMotion","page":"Types","title":"InvariantStopping.Transition.BrownianMotion","text":"BrownianMotion\n\n\n\n\n\n","category":"type"},{"location":"type/","page":"Types","title":"Types","text":"GeometricBrownianMotion","category":"page"},{"location":"type/#InvariantStopping.Transition.GeometricBrownianMotion","page":"Types","title":"InvariantStopping.Transition.GeometricBrownianMotion","text":"GeometricBrownianMotion <: UnderlyingModel\n\nA geometric Brownian motion, specified by its rate, standard deviation sigma and dividend.\n\njulia> underlying_model = GeometricBrownianMotion(3.1,2.0,0.0)\n\n\n\n\n\n","category":"type"},{"location":"type/#Sample","page":"Types","title":"Sample","text":"","category":"section"},{"location":"type/","page":"Types","title":"Types","text":"Sample","category":"page"},{"location":"type/#InvariantStopping.Sampler.Sample","page":"Types","title":"InvariantStopping.Sampler.Sample","text":"Sample\n\nEach of the later is to be interpreted as happening at a later point in time.\n\n\n\n\n\n","category":"type"},{"location":"type/#LoweredSample","page":"Types","title":"LoweredSample","text":"","category":"section"},{"location":"type/","page":"Types","title":"Types","text":" LoweredSample","category":"page"},{"location":"type/#InvariantStopping.Sampler.LoweredSample","page":"Types","title":"InvariantStopping.Sampler.LoweredSample","text":"LoweredSample\n\nThis type stores the basic unit of sampling events.\n\n\n\n\n\n","category":"type"},{"location":"#Usage","page":"Usage","title":"Usage","text":"","category":"section"},{"location":"#Installation","page":"Usage","title":"Installation","text":"","category":"section"},{"location":"","page":"Usage","title":"Usage","text":"InvariantStopping can be installed by running","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"using Pkg; Pkg.add(\"InvariantStopping\")","category":"page"},{"location":"#Usage-example","page":"Usage","title":"Usage example","text":"","category":"section"},{"location":"","page":"Usage","title":"Usage","text":"using InvariantStopping","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"In order to generate samples, we must specify 3 things:","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"An initial state \nA schedule\nA process","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"state = State(0.0) # x coord\n\nschedule = Schedule([0.0,1.0,2.0,3.0])\n\nprocess = BrownianMotion(); \n\nsample = Sample(state, schedule, process)","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"In the above we are sampling a realization of a 1D Brownian motion at times 0.0, 1.0, 2.0 and 3.0. We can visualize the sample using","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"plot(sample)","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"(Image: 1D sample plot)","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"We can increase the dimension of our state space. Consider for instance","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"state_4D = State((0.0,0.0,0.0,0.0))\nsample_4D = Sample(state_4D, schedule, process) ","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"which samples a realization of a 4D Brownian motion. As opposed to plotting coordinate value against time, we can plot any pair of coordinates against each other. For instance","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"plot(sample_4D,[1,4])","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"produces a two dimensional plot where first coordinates are mapped onto the x axis and the fourth coordinates are mapped onto the y axis.","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"(Image: 2D sample plot)","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"We can specify schedule with increasing complexity. ","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"tree_schedule = InvariantStopping.Tree([0.0,1.0,2.0,3.0],3);\n\ntree_sample = Sample(state, tree_schedule, process);\nplot(tree_sample)","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"(Image: 1D ternary tree plot)","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"And in 4D","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"ternary_sample_4D = Sample(state_4D, tree_schedule, process);\nplot(ternary_sample_4D,[1,4]) # Plotting coordinate 1 against coordinate 4","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"(Image: 2D ternary tree plot)","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"Schedule accepts LinRange as well. For instance","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"star_schedule = InvariantStopping(Star(LinRange(0,5,10),40));\nstar_sample = Sample(state, star_schedule, process);\nplot(star_sample)","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"(Image: 1D star plot)","category":"page"},{"location":"#Custom-Schedule","page":"Usage","title":"Custom Schedule","text":"","category":"section"},{"location":"","page":"Usage","title":"Usage","text":"Let's first take a look at the following","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"schedule = InvariantStopping.Tree([0,1,2],3)\nsample = Sample(state, schedule, process)","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"This generates a tree of samples.","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"(Image: Ternary Tree)","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"Note that the above tree can be interpreted as a tree of stopping times with deterministic stopping times.","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"(Image: Ternary Tree)","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"These deterministic stopping times could be replaced by arbitary stopping times.","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"(Image: Ternary Tree)","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"One can see that schedules can be made very general.","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"(Image: Ternary Tree)","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"To craft our own schedule, we must first define a stopping time and the stopping opportunities it contained.","category":"page"},{"location":"#Stopping-Time-and-Stopping-Opportunity","page":"Usage","title":"Stopping Time and Stopping Opportunity","text":"","category":"section"},{"location":"","page":"Usage","title":"Usage","text":"For instance","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"function predicate_1(x,y) \n  return x - 2.0*y > 1.0\nend\n\nfunction predicate_2(x,y)\n  return x + 1.0 > 0.5\nend\n\nstopping_time_1 = HittingTime(predicate_1, LinRange(0.0,10,20))\nstopping_time_2 = HittingTime(predicate_2, LinRange(0.0,10,20))\n\nschedule = Schedule(stopping_time_1, [Schedule(stopping_time_2)for _ in 1:10])\n\nsample = Sample(state,schedule, underlying_model)","category":"page"},{"location":"","page":"Usage","title":"Usage","text":"TODO: Attach image of plot(sample) TODO: Make predicate more stable, as of now it can only take a list of states, as opposed to the coordinates. Makes it hard to define predicates.","category":"page"},{"location":"#Custom-Process","page":"Usage","title":"Custom Process","text":"","category":"section"},{"location":"docstring_guidelines/#Julia-Docstring-Best-Practices","page":"Appendix: Docstring Guidelines","title":"Julia Docstring Best Practices","text":"","category":"section"},{"location":"docstring_guidelines/","page":"Appendix: Docstring Guidelines","title":"Appendix: Docstring Guidelines","text":"When documenting functions, types, and other objects in our package, follow these best practices:","category":"page"},{"location":"docstring_guidelines/#.-**Placement**","page":"Appendix: Docstring Guidelines","title":"1. Placement","text":"","category":"section"},{"location":"docstring_guidelines/","page":"Appendix: Docstring Guidelines","title":"Appendix: Docstring Guidelines","text":"Place the docstring immediately before the object it documents, such as a function, type, or macro.","category":"page"},{"location":"docstring_guidelines/#.-**Usage-Statement**","page":"Appendix: Docstring Guidelines","title":"2. Usage Statement","text":"","category":"section"},{"location":"docstring_guidelines/","page":"Appendix: Docstring Guidelines","title":"Appendix: Docstring Guidelines","text":"Start with a brief usage statement showing the function signature.\nThe usage statement should be indented and set apart from the main description.","category":"page"},{"location":"docstring_guidelines/#.-**Description**","page":"Appendix: Docstring Guidelines","title":"3. Description","text":"","category":"section"},{"location":"docstring_guidelines/","page":"Appendix: Docstring Guidelines","title":"Appendix: Docstring Guidelines","text":"Provide a detailed description of the function or type, elaborating on its purpose, behavior, and any relevant context.","category":"page"},{"location":"docstring_guidelines/#.-**Arguments-and-Returns**","page":"Appendix: Docstring Guidelines","title":"4. Arguments & Returns","text":"","category":"section"},{"location":"docstring_guidelines/","page":"Appendix: Docstring Guidelines","title":"Appendix: Docstring Guidelines","text":"Organize details under # Arguments and # Returns sections.\nFor each argument, start with its name, followed by a colon, and then its description.\nDescribe the return value in a similar manner.","category":"page"},{"location":"docstring_guidelines/#.-**Examples**","page":"Appendix: Docstring Guidelines","title":"5. Examples","text":"","category":"section"},{"location":"docstring_guidelines/","page":"Appendix: Docstring Guidelines","title":"Appendix: Docstring Guidelines","text":"Offer practical examples to illustrate and clarify usage.\nEnclose examples within a Julia code block.","category":"page"},{"location":"docstring_guidelines/#.-**Additional-Sections**","page":"Appendix: Docstring Guidelines","title":"6. Additional Sections","text":"","category":"section"},{"location":"docstring_guidelines/","page":"Appendix: Docstring Guidelines","title":"Appendix: Docstring Guidelines","text":"For objects of greater complexity, consider adding sections like # Notes, # References, or # See Also.","category":"page"},{"location":"docstring_guidelines/#.-**Markdown-Support**","page":"Appendix: Docstring Guidelines","title":"7. Markdown Support","text":"","category":"section"},{"location":"docstring_guidelines/","page":"Appendix: Docstring Guidelines","title":"Appendix: Docstring Guidelines","text":"Use Markdown formatting for clarity and emphasis. This includes bold, italic, and links.","category":"page"}]
}
